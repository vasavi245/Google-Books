{"version":3,"sources":["components/Nav/index.js","components/Footer/index.js","utils/API.js","components/Jumbotron/index.js","components/Grid/index.js","components/SavedResult/index.js","pages/SaveBook.js","components/SearchForm/index.js","components/SearchResult/index.js","pages/SearchBook.js","pages/NoMatch.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","href","id","type","Component","Footer","API","getGoogleSearchBooks","query","axios","get","getBooks","getBook","deleteBook","delete","saveBook","savedBooks","post","Jumbotron","_ref","children","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","SavedResult","props","length","savedbook","title","key","_id","src","image","alt","authors","description","onClick","handleDeleteButton","link","target","rel","SaveBook","state","then","res","_this","componentDidMount","catch","err","console","log","_this2","this","setState","data","components_Jumbotron","components_SavedResult","SearchForm","value","search","name","placeholder","onChange","handleInputChange","handleFormSubmit","SearchResult","books","book","author","event","handleSavedButton","SearchBooks","error","message","preventDefault","items","Error","results","result","volumeInfo","imageLinks","thumbnail","infoLink","filter","alert","components_SearchForm","components_SearchResult","NoMatch","role","aria-label","App","react_router_dom","components_Nav","react_router","exact","path","component","SaveBooks","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f78492a5.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\nimport \"./style.css\"\r\n\r\nclass Nav extends Component {\r\n\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"navbar navbar-expand-lg navbar-primary \">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n                <h2 className=\"text-white\">Google Book Search</h2>\r\n            </a>\r\n            <div id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\" id=\"home\">\r\n                        <a className=\"nav-link\" href=\"/\"><button type=\"button\" className=\"btn btn-1 text-white\">Search Books</button></a>\r\n                    </li>\r\n                    <li className=\"nav-item\" id=\"report\">\r\n                        <a className=\"nav-link\" href=\"/saved\"><button type=\"button\" className=\"btn btn-warning text-white\">Saved Books</button></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"page-footer footer mt-auto py-3\">\r\n        <div className=\"container-fluid text-center\">\r\n            <p>Vasavi</p>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import axios from \"axios\";\r\n\r\nexport default {\r\n    //Get book from google search\r\n    getGoogleSearchBooks: function(query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query);\r\n    },\r\n    //get all books\r\n    getBooks: function() {\r\n        return axios.get(\"/api/books\");\r\n      },\r\n      // Gets the book with the given id\r\n      getBook: function(id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n      },\r\n      // Deletes the book with the given id\r\n      deleteBook: function(id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n      },\r\n      // Saves a book to the database\r\n      saveBook: function(savedBooks) {\r\n        return axios.post(\"/api/books\", savedBooks);\r\n      }\r\n}","import React from 'react';\r\n\r\nimport \"./style.css\";\r\n\r\n\r\n function Jumbotron({ children }) {\r\n     return(\r\n         <div className=\"jumbotron bg-white align-items-center\">\r\n            \r\n             <div className=\"container-fluid text-center\">\r\n                 {children}\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n\r\n export default Jumbotron;","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Row, Col} from \"../Grid\"\r\n\r\nconst SavedResult = props => {\r\n    return (props.savedBooks.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ):(\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Books that You Saved</h3>\r\n                    {props.savedBooks.map(savedbook => {\r\n                        return (\r\n                            <li className=\"saved-list list-group-item\">\r\n                                <Row className=\"SearchResult\" id={savedbook.title + \"Card\"} key={savedbook._id}>\r\n                                    {/* col-3 show image of the book */}\r\n                                    <Col size=\"2\" className=\"bookImage\">\r\n                                        <img src={savedbook.image} alt={savedbook.title} />\r\n                                    </Col>\r\n                                    <Col size=\"1\" className=\"emptyCol\"/>\r\n                                    {/* col-9 show information of the book */}\r\n                                    <Col size=\"9\" className=\"bookInfo\">\r\n                                        <Row>\r\n                                            <h2 className=\"bookTitle\">{savedbook.title}</h2>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <h3 className=\"bookAuthor\">{savedbook.authors}</h3>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <p className=\"bookDescription\">{savedbook.description}</p>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <br></br>\r\n                                <Row className=\"buttonDiv \">\r\n                                    <button className=\"deleteBook btn btn-danger\" id={savedbook._id} onClick={() => props.handleDeleteButton(savedbook._id)}>\r\n                                        Delete Book\r\n                                    </button>\r\n                                    <a href={savedbook.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                        <button className=\"viewBook btn btn-info\">\r\n                                            View Book\r\n                                        </button>\r\n                                    </a>\r\n                                </Row>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SavedResult;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container} from \"../components/Grid\";\r\nimport SavedResult from \"../components/SavedResult\"\r\n\r\nclass SaveBook extends Component {\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n    //when this component mounts, grab all books that were save to the database \r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => this.setState({ savedBooks: res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    //function to remove book by id\r\n    handleDeleteButton = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"container\">\r\n                <Jumbotron />\r\n                <Container>\r\n                    <SavedResult savedBooks={this.state.savedBooks} handleDeleteButton={this.handleDeleteButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SaveBook;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst SearchForm = props => {\r\n    return(\r\n        <form>\r\n        <div className=\"form-group\">\r\n            <label className=\"BookSearchlabel \"><h3>Search for Book</h3></label>\r\n            <br></br>\r\n            <input className=\"col-12 form-control\"\r\n                value={props.search}\r\n                type=\"text\"\r\n                name=\"searchBook\"\r\n                placeholder=\"Enter Book's name\"\r\n                onChange={props.handleInputChange}\r\n            /> \r\n        </div>\r\n        <button type=\"submit\" className=\"submitBtn btn btn-info\" onClick={props.handleFormSubmit}>\r\n            Submit\r\n        </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport {Row, Col} from \"../Grid\"\r\n\r\nconst SearchResult = props => {\r\n    return (props.books.length === 0) ? (\r\n        <div className=\"card\">\r\n            <div className=\"card-body player\">\r\n                <div className=\"article\">\r\n                    <h3>Search Results</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n            <div className=\"card\">\r\n                <div className=\"card-body player\">\r\n                    <div className=\"article\">\r\n                        <h3>Search Results</h3>\r\n                        {props.books.map(book => {\r\n                            return (\r\n                                <li className=\"search-list list-group-item\">\r\n                                    <Row className=\"SearchResult row\" id={book.title + \"Card\"} key={book._id}>\r\n                                        {/* col-3 show image of the book */}\r\n                                        <Col size=\"2\" className=\"bookImage\">\r\n                                            <img src={book.image} alt={book.title} />\r\n                                        </Col>\r\n                                        <Col size=\"1\" className=\"emptyCol\"/>\r\n                                        {/* col-9 show information of the book */}\r\n                                        <Col size=\"9\" className=\"bookInfo\">\r\n                                            <Row>\r\n                                                <h3 className=\"bookTitle\">{book.title}</h3>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <h4 className=\"bookAuthor\">{book.author}</h4>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <p className=\"bookDescription\">{book.description}</p>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br></br>\r\n                                    <Row className=\"buttonDiv \">\r\n                                        <button className=\"saveBook btn btn-warning\"  id={book.id} onClick={(event) => props.handleSavedButton(event)}>\r\n                                            Save Book\r\n                                        </button>\r\n                                        <a href={book.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                            <button className=\"viewBook btn \">\r\n                                                View Book\r\n                                        </button>\r\n                                        </a>\r\n                                    </Row>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default SearchResult;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Container, Row, Col } from \"../components/Grid\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport SearchResult from \"../components/SearchResult\"\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    //create state\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n        message: \"\"\r\n    };\r\n\r\n    //function to take value of what enter in the search bar\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // once it clicks it connects to the google book api with the search value\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                if (res.data.items === \"error\") {\r\n                    throw new Error(res.data.items);\r\n                }\r\n                else {\r\n                    // store response in a array\r\n                    let results = res.data.items\r\n                    //map through the array \r\n                    results = results.map(result => {\r\n                        //store each book information in a new object \r\n                        result = {\r\n                            key: result.id,\r\n                            id: result.id,\r\n                            title: result.volumeInfo.title,\r\n                            author: result.volumeInfo.authors,\r\n                            description: result.volumeInfo.description,\r\n                            image: result.volumeInfo.imageLinks.thumbnail,\r\n                            link: result.volumeInfo.infoLink\r\n                        }\r\n                        return result;\r\n                    })\r\n                    // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\r\n                    this.setState({ books: results, error: \"\" })\r\n                }\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    }\r\n\r\n    handleSavedButton = event => {\r\n        // console.log(event)\r\n        event.preventDefault();\r\n        console.log(this.state.books)\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n        savedBooks = savedBooks[0];\r\n        API.saveBook(savedBooks)\r\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Jumbotron>\r\n                   \r\n                    <h1 className=\"text-info font-weight-bold\">Search for Your Favorite Books</h1>\r\n                </Jumbotron>\r\n                <Container>\r\n                    <Row>\r\n                        <Col size=\"12\">\r\n                            <SearchForm\r\n                                handleFormSubmit={this.handleFormSubmit}\r\n                                handleInputChange={this.handleInputChange}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <br></br>\r\n                <Container>\r\n                    <SearchResult books={this.state.books} handleSavedButton={this.handleSavedButton} />\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default SearchBooks;","import React from \"react\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col size=\"md-12\">\r\n          <Jumbotron>\r\n            <h1>404 Page Not Found</h1>\r\n            <h1>\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </Jumbotron>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport SaveBooks from \"./pages/SaveBook\";\nimport SearchBooks from \"./pages/SearchBook\";\nimport NoMatch from \"./pages/NoMatch\";\n\nfunction App() {\n  \n  return (\n   \n      <Router>\n        <div>\n      <Nav />\n      <Switch>\n      <Route exact path=\"/\" component={SearchBooks} />\n      <Route exact path=\"/saved\" component={SaveBooks} />\n      <Route exact path=\"/saved/:id\" component={SaveBooks} />\n      <Route component={NoMatch} />\n      </Switch>\n      </div>\n      <Footer />\n      </Router>\n     \n  );\n}\n\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'materialize-css/dist/js/materialize.min.js';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}